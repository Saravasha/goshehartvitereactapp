# Triggers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
    - Stage
jobs:
  deploy:
    name: Deploy project with Nginx
    permissions:
      deployments: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: 'actions/checkout@v2'
        with:
          ref: main
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@main
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          environment: production
      - name: Set up SSH Key and Deploy my App on Server
        # run: |
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            git config --global url."https://${{ secrets.PERSONAL_GITHUB_TOKEN }}:@github.com"
            cd {{ secret.DIRECTORY }}
            git pull origin main
            npm ci
            npm run build
            cp -r dist/* /var/www/html
            pm2 restart chatg --update-env
      - name: Update deployment Status (success)
        if: success()
        uses: chrnorm/deployment-status@main
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
      
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@main
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
